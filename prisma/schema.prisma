//
// Autogenerated by `prisma-import`
// Any modifications will be overwritten on subsequent runs.
//

//
// main.prisma
//

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// auth.prisma
//

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  username String @unique

  emailConfirmationRequest EmailConfirmationRequest?
  session                  Session[]
}

model EmailConfirmationRequest {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  expireDate DateTime

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Session {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  expireDate DateTime

  userId Int
  user   User @relation(fields: [userId], references: [id])
}

//
// book.prisma
//

model Book {
  isbn Int @id @unique

  title           String
  subtitle        String?
  number_of_pages Int?
  publish_date    DateTime?

  isbn10 Int? @unique
  isbn13 Int? @unique

  front_image String?
  back_image  String?

  location   Location? @relation(fields: [locationId], references: [id])
  locationId Int?

  language   Language? @relation(fields: [languageId], references: [id])
  languageId Int?

  authors    Author[]
  publishers Publisher[]
  subjects   Subject[]
}

model Location {
  id    Int    @id @default(autoincrement())
  value String @unique

  books Book[]
}

model Language {
  id    Int    @id @default(autoincrement())
  value String @unique

  books Book[]
}

model Author {
  id   Int    @id @default(autoincrement())
  name String @unique

  books Book[]
}

model Publisher {
  id   Int    @id @default(autoincrement())
  name String @unique

  books Book[]
}

model Subject {
  id    Int    @id @default(autoincrement())
  value String @unique

  books Book[]
}
