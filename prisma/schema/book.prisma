model Book {
    id       Int    @id @default(autoincrement())
    publicId String @unique

    authors  Author[]
    subjects Subject[]
    editions BookEdition[]
}

model BookEdition {
    id       Int    @id @default(autoincrement())
    publicId String @unique

    bookId Int
    book   Book @relation(fields: [bookId], references: [id], onDelete: Cascade)

    title         String
    subtitle      String?
    numberOfPages Int?
    publishDate   PublishDate?
    isbn10        String?      @unique
    isbn13        String?      @unique
    image         Image[]

    languageId Int?
    language   Language? @relation(fields: [languageId], references: [id])

    authors      Author[]
    publishers   Publisher[]
    readingState UserBookReadingState[]
    collections  BookCollection[]
    ratings      UserBookRating[]

    copies BookCopy[]
}

model BookCopy {
    id Int @id @default(autoincrement())

    editionId Int
    edition   BookEdition @relation(fields: [editionId], references: [id], onDelete: Cascade)

    locationId Int
    location   Location @relation(fields: [locationId], references: [id], onDelete: Cascade)
}

model Image {
    id Int @id @default(autoincrement())

    bookEditionId Int
    BookEdition   BookEdition @relation(fields: [bookEditionId], references: [id])

    width  Int
    height Int

    createdAt DateTime @default(now())
}

model PublishDate {
    id    Int  @id @default(autoincrement())
    year  Int
    month Int?
    day   Int?

    editionId Int         @unique
    edition   BookEdition @relation(fields: [editionId], references: [id], onDelete: Cascade)
}

model Location {
    id    Int    @id @default(autoincrement())
    value String @unique

    copies BookCopy[]
}

model Language {
    id    Int    @id @default(autoincrement())
    value String @unique

    editions BookEdition[]
}

model Author {
    id   Int    @id @default(autoincrement())
    name String @unique

    books    Book[]
    editions BookEdition[]
}

model Publisher {
    id   Int    @id @default(autoincrement())
    name String @unique

    editions BookEdition[]
}

model Subject {
    id    Int    @id @default(autoincrement())
    value String @unique

    books Book[]
}

model BookCollection {
    id   Int    @id @default(autoincrement())
    name String

    editions BookEdition[]

    ownerId Int
    owner   User @relation(fields: [ownerId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}
